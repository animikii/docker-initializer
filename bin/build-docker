#!/usr/bin/env bash
# Initialize the docker build step. 
# 1. It should copy/move/create any configuration that is required before starting a build. 
# 2. Initialize the build of the web container, which should include bundle install and yarn install if needed
# 3. Start the container to ensure depends_on containers are downloaded and created
# 4. Run database setup steps and anything else needed for running development
# 5. Stop the containers


### -----------------------------------
### This will ensure the entire script exits if any of the child scripts exit
set -e

### -----------------------------------
### Copy necessary files that are not versioned in the repo or require user input

# if ! test -f ".env"; then
#   cp .env.example .env
# fi

# if ! test -f "config/database.yml"; then
#   cp config/database.yml.example config/database.yml
# fi

# if ! test -f "config/master.key"; then
#   touch config/master.key
  
#   echo "Please enter the master.key:"
#   read -sp 'key: ' KEY
#   echo $KEY > config/master.key
# fi

# ----------------------------------- Build the web container and tag it
docker build . -f ./Dockerfile -t TAGNAME

### -----------------------------------
### Start the container

docker-compose up -d

# bin/exec rails db:setup

# bin/exec yarn install

# bin/exec rails db:test:prepare

docker-compose stop
